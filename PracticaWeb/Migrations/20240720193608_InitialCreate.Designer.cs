// <auto-generated />
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using PracticaWeb.Data;

#nullable disable

namespace PracticaWeb.Migrations
{
    [DbContext(typeof(PracticaWebContext))]
    [Migration("20240720193608_InitialCreate")]
    partial class InitialCreate
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.7")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("PracticaWeb.Models.PrecioProveedores", b =>
                {
                    b.Property<int>("ID_Precio")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ID_Precio"));

                    b.Property<string>("ClaveProveedor")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("ID_Producto")
                        .HasColumnType("int");

                    b.Property<int>("ID_Proveedor")
                        .HasColumnType("int");

                    b.Property<decimal>("Precio")
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("ID_Precio");

                    b.ToTable("PrecioProveedores");
                });

            modelBuilder.Entity("PracticaWeb.Models.Productos", b =>
                {
                    b.Property<int>("ID_Producto")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ID_Producto"));

                    b.Property<bool>("Activo")
                        .HasColumnType("bit");

                    b.Property<string>("Clave")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Nombre")
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("Precio")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("TipoProducto")
                        .HasColumnType("int");

                    b.HasKey("ID_Producto");

                    b.ToTable("Productos");
                });

            modelBuilder.Entity("PracticaWeb.Models.Proveedores", b =>
                {
                    b.Property<int>("ID_Proveedor")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ID_Proveedor"));

                    b.Property<string>("Descripcion")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Nombre")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ID_Proveedor");

                    b.ToTable("Proveedores");
                });

            modelBuilder.Entity("PracticaWeb.Models.TipoProductos", b =>
                {
                    b.Property<int>("ID_TipoProducto")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ID_TipoProducto"));

                    b.Property<string>("Descripcion")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Nombre")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ID_TipoProducto");

                    b.ToTable("TipoProductos");
                });
#pragma warning restore 612, 618
        }
    }
}
